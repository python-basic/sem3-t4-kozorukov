import re

def factorial(n):
    if '.' in str(n):
        raise ValueError("Факториала от дробного числа не существует!")
    elif not re.sub('\.|\-', '', str(n)).isdigit():
        raise TypeError("Аргумент не является числом!")
    elif float(n) < 0:
        raise ValueError("Факториала от отрицательного числа не существует!")
    else:
        n = int(n)
        return 1 if not n else n * factorial(n - 1)


print(f'n! = {factorial(input("Введите число n: "))}')



import unittest
import custom_factorial


class TestStringMethods(unittest.TestCase):

    def test_int_vals(self):
        self.assertEqual(custom_factorial.factorial(3), 6)
        self.assertEqual(custom_factorial.factorial(4), 24)
        self.assertEqual(custom_factorial.factorial(6), 720)

    def test_fp_vals(self):
        self.assertRaises(
                          ValueError,
                          custom_factorial.factorial(5.3),
                          msg='Факториала от дробного числа не существует!'
                         )

    def test_invalid_vals(self):
        pass


if __name__ == '__main__':
    unittest.main()
